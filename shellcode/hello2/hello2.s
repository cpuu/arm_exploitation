@ as hello2.s -o hello2.o
@ ld hello2.o -o hello2

.text

.global _start


_start:
    mov     r0, #0
    push   {r0}
    movw        r1, #0x6548     @ He
    movt        r1, #0x6c6c     @ ll
    movw        r2, #0x576f     @ oW
    movt        r2, #0x726f     @ or
    movw        r3, #0x646c     @ ld
    movt        r3, #0x0a32	@ 2\n

    push    {r1,r2,r3}

    @ write(unsigned int fd, const char *buf, size_t count)
    mov     r0, #1       @ file descriptor (1 == stdout)   
    mov     r1, sp       @ load string from stack
    mov     r2, #12      @ message length
    mov     r3, #0     
    mov     r7, #4       @ Syscall 0x4 = write()
    swi     #0           @ calling syscall (svc)
 
_exit: 
    mov     r0, #0       @ int error_code
    mov     r7,#1        @ Syscall 0x1 = exit()
    swi     #0           @ calling syscall (svc)
